<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_learning_hub_learning_hub</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_learning_hub_learning_hub">stateCHANGESTO7^resolution_codeCHANGESTOknown_error^EQ<item display_value="Closed" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="7"/>
            <item display_value="Known error" endquery="false" field="resolution_code" goto="false" newquery="false" operator="CHANGESTO" or="false" value="known_error"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Check if Known error article required</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
    var knowledgeGr = new GlideRecord('kb_knowledge');
    var kbTaskGr = knowledgeGr.addJoinQuery('m2m_kb_task');
    knowledgeGr.addQuery('sys_class_name', 'kb_template_known_error_article');
    kbTaskGr.addCondition('x_snc_learning_hub_learning_hub', current.sys_id);
    knowledgeGr.setLimit(1);
    knowledgeGr.query();
    if (!knowledgeGr.hasNext()) {
        current.setAbortAction(true);
        gs.addErrorMessage(gs.getMessage("Please attach a Known error article, before resolving the record as known error"));
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-18 05:06:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>61d1b27fc3759210aa2498ec0501317b</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Check if Known error article required</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incidents" source="x_snc_learning_hub">b5b12a99c3199210aa2498ec0501314e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Incidents">b5b12a99c3199210aa2498ec0501314e</sys_scope>
        <sys_update_name>sys_script_61d1b27fc3759210aa2498ec0501317b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-26 14:03:32</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=61d1b27fc3759210aa2498ec0501317b"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>61d1b27fc3759210aa2498ec0501317b</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-18 05:06:21</sys_created_on>
        <sys_id>9ca2f27fc3759210aa2498ec050131a1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-18 05:06:21</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
